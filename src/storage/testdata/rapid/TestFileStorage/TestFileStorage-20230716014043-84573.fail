# 2023/07/16 01:40:43.248704 [TestFileStorage] [rapid] draw ops: []string{"AppendEntries", "TruncateLogStartingFrom", "TruncateLogStartingFrom", "TruncateLogStartingFrom", "AppendEntries", "GetEntryAtIndex", "GetEntryAtIndex"}
# 2023/07/16 01:40:43.249481 [TestFileStorage] [rapid] draw append: entries: []types.Entry{types.Entry{Term:0x47c3, Index:0x0, Type:0x9, Value:[]uint8{}}, types.Entry{Term:0x5, Index:0x0, Type:0xf1, Value:[]uint8{0x75, 0x6d}}, types.Entry{Term:0x0, Index:0x0, Type:0x0, Value:[]uint8{}}, types.Entry{Term:0xffffffffffffffff, Index:0x0, Type:0x4, Value:[]uint8{0x17, 0x1d, 0x0, 0x1, 0x1, 0x1, 0x6, 0x5d, 0xe3, 0x5a, 0x2e, 0x22}}, types.Entry{Term:0x33, Index:0x0, Type:0xa, Value:[]uint8{0xff, 0xf2, 0xe8, 0x3, 0x1, 0xa, 0x5, 0xe7, 0x1, 0x0, 0xc4, 0x8b, 0x91, 0x3, 0xff, 0x73, 0x5c, 0x12, 0x20, 0x58, 0x24}}, types.Entry{Term:0xffffffffffffffff, Index:0x0, Type:0x3, Value:[]uint8{0x7}}, types.Entry{Term:0x18, Index:0x0, Type:0x1a, Value:[]uint8{0x26, 0x3, 0x57, 0x2}}, types.Entry{Term:0x3df109, Index:0x0, Type:0x38, Value:[]uint8{0x0, 0x7, 0xb4, 0x6e, 0x55}}}
# 2023/07/16 01:40:43.270193 [TestFileStorage] appended 8 entries
# 2023/07/16 01:40:43.270219 [TestFileStorage] [rapid] draw truncate: maybeExistingIndex: 0x6
# 2023/07/16 01:40:43.295299 [TestFileStorage] truncated from index 6 len(model.entries)=5 storageErr=<nil> modelErr=<nil>
# 2023/07/16 01:40:43.295380 [TestFileStorage] [rapid] draw truncate: maybeExistingIndex: 0x2
# 2023/07/16 01:40:43.345420 [TestFileStorage] truncated from index 2 len(model.entries)=1 storageErr=<nil> modelErr=<nil>
# 2023/07/16 01:40:43.345473 [TestFileStorage] [rapid] draw truncate: maybeExistingIndex: 0x1
# 2023/07/16 01:40:43.362169 [TestFileStorage] truncated from index 1 len(model.entries)=0 storageErr=<nil> modelErr=<nil>
# 2023/07/16 01:40:43.362323 [TestFileStorage] [rapid] draw append: entries: []types.Entry{types.Entry{Term:0xaca833, Index:0x0, Type:0xf, Value:[]uint8{0x2, 0x10, 0x21, 0x3d, 0xc1, 0xfe, 0x1f, 0x19, 0xff, 0xff, 0xb, 0x6, 0x19, 0x3, 0x45, 0x2b, 0x3, 0xff}}, types.Entry{Term:0x682f, Index:0x0, Type:0x0, Value:[]uint8{0x79, 0x0, 0xe7, 0x1f, 0x6, 0x59, 0x37, 0x83, 0xf3, 0xa9, 0x1, 0x3, 0x0}}, types.Entry{Term:0x1b, Index:0x0, Type:0x2, Value:[]uint8{0x3c, 0x5, 0xf8}}}
# 2023/07/16 01:40:43.404149 [TestFileStorage] appended 3 entries
# 2023/07/16 01:40:43.404254 [TestFileStorage] [rapid] draw get entry: maybeExistingIndex: 0x4
# 2023/07/16 01:40:43.404335 [TestFileStorage] getting entry at index 4 storageErr=index out of bounds: nextEntryIndex=4 index=4 index out of bounds modelErr=index out of bounds
# 2023/07/16 01:40:43.404419 [TestFileStorage] [rapid] draw get entry: maybeExistingIndex: 0x1
# 2023/07/16 01:40:43.404479 [TestFileStorage] getting entry at index 1 storageErr=<nil> modelErr=<nil>
# 2023/07/16 01:40:43.405477 [TestFileStorage] 
# 	Error Trace:	/home/bruno/dev/go/raft-go/src/storage/file_storage_test.go:130
# 	            				/home/bruno/go/pkg/mod/pgregory.net/rapid@v1.0.0/engine.go:367
# 	            				/home/bruno/go/pkg/mod/pgregory.net/rapid@v1.0.0/engine.go:376
# 	            				/home/bruno/go/pkg/mod/pgregory.net/rapid@v1.0.0/engine.go:202
# 	            				/home/bruno/go/pkg/mod/pgregory.net/rapid@v1.0.0/engine.go:117
# 	            				/home/bruno/dev/go/raft-go/src/storage/file_storage_test.go:93
# 	Error:      	Not equal: 
# 	            	expected: &types.Entry{Term:0xaca833, Index:0x1, Type:0xf, Value:[]uint8{0x2, 0x10, 0x21, 0x3d, 0xc1, 0xfe, 0x1f, 0x19, 0xff, 0xff, 0xb, 0x6, 0x19, 0x3, 0x45, 0x2b, 0x3, 0xff}}
# 	            	actual  : &types.Entry{Term:0x0, Index:0x0, Type:0x0, Value:[]uint8{}}
# 	            	
# 	            	Diff:
# 	            	--- Expected
# 	            	+++ Actual
# 	            	@@ -1,8 +1,6 @@
# 	            	 (*types.Entry)({
# 	            	- Term: (uint64) 11315251,
# 	            	- Index: (uint64) 1,
# 	            	- Type: (uint8) 15,
# 	            	- Value: ([]uint8) (len=18) {
# 	            	-  00000000  02 10 21 3d c1 fe 1f 19  ff ff 0b 06 19 03 45 2b  |..!=..........E+|
# 	            	-  00000010  03 ff                                             |..|
# 	            	+ Term: (uint64) 0,
# 	            	+ Index: (uint64) 0,
# 	            	+ Type: (uint8) 0,
# 	            	+ Value: ([]uint8) {
# 	            	  }
# 	Test:       	TestFileStorage
# 
v0.4.8#9513850860420928457
0x976267f336008
0x1d751eba55de0a
0x0
0x6b5a4d6f9688d
0xb08399cc8e3d8
0x1
0x13d0c4dcf1dc00
0x10710f30fa0193
0x3
0x1
0x85a0824a335b1
0x14e282a5d25303
0x1
0x18d07688a32ff6
0x4ffaac7a08a57
0x0
0xb22d5a6f8b55e
0x9994773712c7a
0x3
0x2
0xa955fdbf77fb6
0xa20809fe0acd1
0x2
0x114a4feb82f20
0x1c01ae0329eba3
0x143ec7e3591f64
0x47c3
0xca4b955f9bbd4
0x9
0xc047ec296e9d
0x12de8b13cf12f6
0x7bd35c7855364
0x5
0x1b2bc4c59b187f
0xf1
0x17e7fecbd6150e
0x13ed5b1cb50e91
0x75
0x55c4d1dd47533
0x13c64ea1abae24
0x6d
0xf372a7204a91
0x1be20c3ca95529
0x12a59996c5e60
0x0
0x2c170d4033983
0x0
0x4fc0b32dfdd48
0x18a6128a76eb27
0x1f5a70bb2cb4a4
0xffffffffffffffff
0xa64eab99ddb57
0x4
0xe8edd1d88a38c
0xca9d813100046
0x17
0xf6a379b0266d4
0xf589b65303931
0x1d
0x1f60830ee4c27b
0x19cca977d35914
0x0
0x864a0bb64c496
0x10ba632e74afa1
0x1
0x1ad3208ecc4c41
0x5d2e2a6118438
0x1
0x1ebaab5f29361f
0x4c0372dd88b47
0x1
0x180f1f20bda913
0x8d816ce7a8f21
0x6
0x1d6c761a81cbd6
0x1b8661fd6ca26e
0x5d
0x6b15184574081
0x17a1b351473828
0xe3
0x108c7b37f004fa
0x118e127da33453
0x5a
0x17f2c7c26678a0
0xefedeb8409eac
0x2e
0x18547af134baaf
0x126df71d096865
0x22
0x127e30930722d
0xf7e3aa6727f36
0xb004ebaa62416
0x33
0x10ae1d398a053d
0xa
0x5897978d77255
0x1fd426396a3d73
0xffffffffffffffff
0x1380a5a0574c79
0x1944e15456c15b
0xf2
0x19cc9966f77ced
0x1f280e1841d8a3
0xe8
0x107b3773a66780
0x1507d0ca00b729
0x3
0x1acefc78d6bcff
0x9ba020ec0647
0x1
0x12331e0e936a72
0xa275dfc4fc41d
0xa
0x15db97845d0a9c
0xc4f2bb390c89c
0x5
0x1646068f090d34
0x13c1ce49c3b088
0xe7
0x1314338d27a0cc
0xb184f0cb2442
0x1
0x1e39df7d5ba34f
0x4d0ed843d57dd
0x0
0xd302a3217d87d
0x18a2eac5613802
0xc4
0x136618004fa77b
0x1b645ef52c6db4
0x8b
0x10e95729a68d79
0x1e24867daf8838
0x91
0x16a00734a32c39
0xbb7f5dd3aba8c
0x3
0x1bf93fb43e9136
0x1ff621374d37ff
0xffffffffffffffff
0xf1745251f64e1
0x1a517ff5b1924f
0x73
0x9f2b17f88ad27
0x191d4290f793e7
0x5c
0x155de00c00ef36
0xd5940ba293d31
0x12
0x1097cc04e344c4
0x1baa217bfb2dbc
0x20
0x1f7f9008fb5624
0x190028eb87f500
0x58
0xe3642266a6c99
0xf125e28dd88de
0x24
0x50345dc3aa4e4
0x7b95aafed3998
0x1fd339671d3bb0
0xffffffffffffffff
0x4895eddc17480
0x3
0x1dfac99e68e958
0xdb2fc40cafcbf
0x7
0x279748b7ccc3f
0x6fa9cf7a5091a
0x91f2b6a133a3a
0x18
0xd58748dbb668c
0x1a
0x1740dd7298afff
0xf7476d8b6d72b
0x26
0x1ae7ce8fceaa0b
0xce869cafcf4bc
0x3
0x160b566562b314
0x1ca5644e2311ff
0x57
0x19a39b8d000f45
0x4a82a5f81a15e
0x2
0x67ed4e5b181d
0xde23771766c41
0x174494efb71540
0x3df109
0x1d3baa5bbaeec6
0x38
0xf26f0caa32d33
0x3f3b78e650a08
0x0
0xd2d0c8a3535c0
0x94077f372dc8f
0x7
0x6582774874f4c
0x1384aee38f7da0
0xb4
0x143e0798b58edf
0x16c2e8dbc23146
0x6e
0x7d4fed8166fb2
0x18d54e290fd36c
0x55
0x51207f1da5526
0x2b2aad76f7fa9
0x19a3a65481d68b
0x1c
0x1f
0x5
0x275380140ddf6
0x1
0x1c95e985c07da1
0x3
0x0
0x579246a83758c
0x1866c96117e81f
0xaca833
0xc4cacc4fd1aad
0xf
0x1e2e81924cf536
0x6ac61afe280c3
0x2
0x175a116f8d41e5
0x122e339fc49b9a
0x10
0xcec9c1169ae8d
0x11134be2dbfc5e
0x21
0x14e2a475bfbe0e
0x16100570191fba
0x3d
0x8cec308d8598e
0x15b52a5fee54a8
0xc1
0x1507e4b06bd027
0x1a5dede6be9352
0xfe
0x901500b6c684a
0x134a2335eb93f2
0x1f
0x19ebfb5f0ed90b
0xd113db32afc62
0x19
0x9802e588d692f
0x1f359163b0ed66
0xffffffffffffffff
0xfb6fa06ae1d79
0x1fd709ea325bdb
0xffffffffffffffff
0xc603339d435b8
0xe2553d20edf49
0xb
0xd847c2aba33f5
0x7ce90b3387a10
0x6
0xde5f328c26a1d
0xcaf55550a6286
0x19
0x8ebed5d441688
0x90de5caa21e55
0x3
0x1ae0caa0483afb
0x1780cdb70590f6
0x45
0x174370c8352efd
0xfb82b211ce36b
0x2b
0xa9e4d90b168aa
0x84a8644b8fd40
0x3
0x162c728413db52
0x1ffe49f2ecf481
0xffffffffffffffff
0x741afc1c9d0
0x7401cfed6856f
0x143d7f3daf992e
0x682f
0x8c6be41eaef8
0x0
0x18fc8caaeb6dd4
0x19ad94bdeed599
0x79
0x163017bbbb4ff5
0x10f5e7cad5529
0x0
0x11ed95a5bac2ff
0x1ec08d1c174aeb
0xe7
0xeb6e937924f95
0x12c71702c1eebf
0x1f
0xd0bfe0df94b57
0x78aa5caafb72b
0x6
0x6dfb1185a258e
0x111893715b8945
0x59
0x173e742219c1c3
0x10672b317e83c8
0x37
0x1e84da54c3030e
0x16529290af1ea3
0x83
0xc66a00c07409f
0x1dea8cc1ff585e
0xf3
0x691b783b2f7e8
0x1c75abd6c9f8fb
0xa9
0x86a687636bd23
0x343d912766148
0x1
0x1272045689fddd
0x1bd51449f7e2a7
0x3
0x124420b272f615
0xa3f48595b38f8
0x0
0x1a910b86f1ef0
0x14469fd6cb065e
0x7ddb3d3bf7652
0x1b
0x4003af846524e
0x2
0x192dc8491bacd7
0x128d36734d38f4
0x3c
0x1b9d546972654c
0x777ac35beb7ec
0x5
0x1ad649f15ad1c5
0x1ced8527adab52
0xf8
0x1d9cfdaf8760b
0x1ff494645d63d
0x5f3b7052f53dd
0x3
0x2fb771efd9937
0x0